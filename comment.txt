// express

Express는 웹 및 모바일 애플리케이션을 위한 일련의 강력한 기능을 제공하는 간결하고 유연한 Node.js 웹 애플리케이션 프레임워크입니다.

Express 는 가장 인기있는 Node 웹 프레임 워크 이며, 다른 많은 인기있는 Node web frameworks의 기본 라이브러리 입니다.
Express는 다음과 같은 메커니즘을 제공합니다:

HTTP 통신 요청(Request; GET, POST, DELETE 등)에 대한 핸들러를 만든다.
템플릿에 데이터를 넣어 응답(response)을 만들기 위해 view의 렌더링 엔진과 결합(integrate)한다.
접속을 위한 포트나 응답 렌더링을 위한 템플릿 위치같은 공통 웹 어플리케이션 세팅을 한다.
핸들링 파이프라인(reqest handling pipeline) 중 필요한 곳에 추가적인 미들웨어 처리 요청을 추가한다.
Express 자체는 꽤나 최소한의 기능만 탑재하지만 개발자들이 거의 모든 웹 개발의 문제를 다루는 호환성있는 미들웨어 패키지를 만들어왔습니다.
쿠키, 세션, 사용자 로그인, URL 파라미터, POST 데이터, 보안 헤더와 그외 많은 것들에 대한 라이브러리들이 있습니다.
여러분은 Express Middleware에서 Express 팀이 유지보수하는 미들웨어 패키지 리스트를 확인할 수 있습니다.(유명한 서드파티 패키지들을 포함).

// pug

pug는 html을 조금 더 세련되게 쓸 수 있는 템플릿 언어, express 뷰 엔진이다. npm으로 설치할 수 있다.
사실 어떤 템플릿 언어를 써도 무방하다. 하지만, 퍼그는 html과 js의 결합 형태로 나타나서 pug를 조금만 다룰 줄 안다면
반복문이나 삼항연산자 같은 자잘한 것들은 js로 해 주지 않아도 되는 게 좋은 것 같다.

// babel

바벨을 사용하는 이유를 이해하기 위해서는 먼저 크로스 브라우징(cross-browsing에 대한 이해가 필요합니다.
크로스 브라우징은 각 브라우저 마다 지닌 JavaScript 엔진의 차이로 발생하는 것인데 최신의 모던 브라우저에서는 최신 JavaScript 문법이 동작하지만
이를 지원하지 않는 브라우저에서는 앱이 제대로 동작하지 않는 문제를 말합니다.
이를 해결하기 위해서 옛날에는 단순히 옛날 문법을 통해 앱을 지원하는 방식이였지만 이제 우리는 바벨을 통해서 이 문제를 쉽게 풀어갈 수 있게 되었습니다.

우리가 작성한 코드를 일반 nodejs코드로 컴파일

// nodemon

설치한 다음엔, 다음 명령어를 통해서 서버를 실행하면 코드가 바뀔떄마다 자동으로 재시작을 해줍니다.
자동으로 코드 적용

 // npm -D ,, i랑 많이 사용

 -D, --save-dev : 패키지가 devDependencies.에 나타납니다.

 //static file

 1. Static File(정적 파일)

정적 파일이란, 직접 값에 변화를 주지 않는 이상 변하지 않는 파일을 의미합니다. 예를 들면, image, css 파일, js 파일 등을 의미합니다. 
express는 이러한 정적 파일들을 손쉽게 제공할 수 있는 기능을 가지고 있습니다.
​
만약, 기능을 제공하지 않는다면 파일이 존재하는 path로 접근해왔을 때 파일을 제공해주면 됩니다.(동적 파일으로서 제공을 해주는 과정이 복잡!)
하지만 이는 굉장히 번거롭고 코드를 복잡하게 만든다는 단점이 있습니다.

​

2. 정적 파일 제공하기
https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=pjok1122&logNo=221545195520

app.use(express.static('public'));
express 변수에는 stastic이라는 메서드가 포함되어있습니다.
이 메서드를 미들웨어로서 로드해줍니다. static의 인자로 전달되는 'public'은 디렉터리의 이름입니다.
따라서 'public' 이라는 디렉터리 밑에 있는 데이터들은 웹브라우저의 요청에 따라 서비스를 제공해줄 수 있습니다.

가령, 사용자가 127.0.0.1:3000/images/cat.jpg 로 접근한다면, 해당 파일을 public/images/cat.jpg에 존재하는지 검색하게 됩니다.

이와 같은 방법은 public에 저장된 파일만을 제공한다는 점에서도 보안적인 이점이 있습니다.

​express.static 메서드는 node 프로세스가 실행되는 디렉터리에 상대적입니다. 따라서 절대경로를 사용하는 것이 안전할 수 있습니다.

app.use('/static', express.static(__dirname + '/public'));

//server.js backend
//app.js frontend